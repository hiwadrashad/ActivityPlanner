@page "/additem"
@using ActivityPlannerBlazor.Client.Interfaces;
@using ActivityPlannerBlazor.Shared.Models;
@using Microsoft.AspNetCore.Components;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;

<section class="employee-edit">
    <h1 class="page-title">Add</h1>
    <EditForm Model="AddingModel" OnValidSubmit="addInitial">
        <div class="form-group row">
            <label class="col-sm-3">text </label>
            <InputText id="initial" class="form-control col-sm-8" @bind-Value="@AddingModel.Text"></InputText>
            <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => AddingModel.Text)" />
        </div>
  
        <button type="submit" class="btn btn-primary edit-btn">add item</button>
    </EditForm>

</section>

@code {
    [Inject]
    public IInitialDataService dataService { get; set; }
    public InitialModel AddingModel { get; set; }
#pragma warning disable CS1998 // Async method lacks 'await' operators and will run synchronously
    protected override async Task OnInitializedAsync()
#pragma warning restore CS1998 // Async method lacks 'await' operators and will run synchronously
    {
        AddingModel = new InitialModel()
        {
            id = Guid.NewGuid().ToString(),
        };
    }

    public async void addInitial()
    {
        await dataService.AddInitial(AddingModel);
    }
}
